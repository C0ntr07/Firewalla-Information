# A list of the additional tools installed for impoved experience and to enable the preferred across boots

#
# Update the locate database
#
sudo updatedb


#
# Add tools to report on CPU temperature
#
# Typical results
# 
# Without a fan
#
# acpitz-virtual-0
# Adapter: Virtual device
# temp1:        +43.0°C  (crit = +127.0°C)
# temp2:        +26.8°C  (crit = +95.0°C)
# 
# coretemp-isa-0000
# Adapter: ISA adapter
# Core 0:       +48.0°C  (high = +90.0°C, crit = +90.0°C)
# Core 1:       +48.0°C  (high = +90.0°C, crit = +90.0°C)
# Core 2:       +49.0°C  (high = +90.0°C, crit = +90.0°C)
# Core 3:       +51.0°C  (high = +90.0°C, crit = +90.0°C)
# 
#
# With a fan
#
# acpitz-virtual-0
# Adapter: Virtual device
# temp1:        +32.0°C  (crit = +127.0°C)
# temp2:        +26.8°C  (crit = +95.0°C)
# 
# coretemp-isa-0000
# Adapter: ISA adapter
# Core 0:       +34.0°C  (high = +90.0°C, crit = +90.0°C)
# Core 1:       +34.0°C  (high = +90.0°C, crit = +90.0°C)
# Core 2:       +34.0°C  (high = +90.0°C, crit = +90.0°C)
# Core 3:       +37.0°C  (high = +90.0°C, crit = +90.0°C)
# 
sudo apt install lm-sensors
sensors


#
# Install wireless tools
#
sudo apt install wireless-tools


#
# Mount the SATA SSD
#
mkdir /sata-drive
sudo mount /dev/sda1 sata-drive


#
# Setup DDNS
#
sudo apt install ddclient -y
sudo ddclient -daemon=86400 -protocol=dyndns2 -use=web -web=checkpi.dyndns.com, web-skip='IP Address' -server=members.dyndns.org -login=LOGINUSERNAME -password='LOGINPASSWORD' -proxy=URLPROXYTOBEUPDATED
tab
enter
USERID
tab
enter
PASSWORD
tab
enter
PASSWORD
tab
enter
enter
tab
enter
down
space
tab
enter
enter


# https://www.intel.com/content/www/us/en/support/articles/000005511/network-and-i-o/wireless.html
# Get the intel drivers
wget https://wireless.wiki.kernel.org/_media/en/users/drivers/iwlwifi-7260-ucode-25.30.13.0.tgz
tar zxvf iwlwifi-7260-ucode-25.30.13.0.tgz

#!/bin/bash
sudo apt install wireless-tools
# sudo nano /etc/netplan/50-cloud-init.yaml
# https://medium.com/@arnab.k/ubuntu-how-to-setup-a-wi-fi-hotspot-access-point-mode-192cbb2eeb90
# sudo apt install iw
sudo apt install hostapd
sudo echo -e  'interface=wlan0\ndriver=nl80211\nssid="Firewalla Gold WiFi"\nhw_mode=g\nchannel=1\nmacaddr_acl=0\nauth_algs=1\nignore_broadcast_ssid=0\nwpa=3\nwpa_passphrase=30404ce58f\nwpa_key_mgmt=WPA-PSK\nwpa_pairwise=TKIP\nrsn_pairwise=CCMP' | sudo tee /etc/hostapd/hostapd.conf
sudo sed -i 's/\#DAEMON_CONF\=\"/DAEMON_CONF\=\"\/etc\/hostapd\/hostapd\.conf/' "/etc/default/hostapd"
sudo systemctl unmask hostapd
sudo systemctl enable hostapd
sudo service hostapd start
sudo brctl addif br0 wlan0

# 
# setup PiHole
#
cat << EOF >> /home/pi/.firewalla/run/docker/pi-hole/docker-compose.yaml

version: "3"

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:v5.1.2
    environment:
      # set a secure password here or the default will be firewalla
      WEBPASSWORD: 'firewalla'
    # Volumes store your data between container upgrades
    volumes:
      - '/data/pi-hole/etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
      - '/etc/localtime:/etc/localtime:ro'
    restart: unless-stopped
    networks:
      default:
        # static IP address for pi-hole
        ipv4_address: 172.16.0.2

networks:
  default:
    driver: bridge
    ipam:
     config:
       # your chosen docker network here
       - subnet: 172.16.0.0/24
EOF
cat << EOF >> /home/pi/tools/PiHoleSetup.sh
cd /home/pi/.firewalla/run/docker/pi-hole
sudo systemctl start docker
sudo docker-compose pull
sudo docker-compose up --no-start
sudo ip route add 172.16.0.0/24 dev br-$(sudo docker network inspect pi-hole_default |jq -r '.[0].Id[0:12]') table lan_routable
sudo ip route add 172.16.0.0/24 dev br-$(sudo docker network inspect pi-hole_default |jq -r '.[0].Id[0:12]') table wan_routable
sudo docker-compose up --detach
EOF

cd /home/pi/tools/
sudo chmod 777 PiHoleSetup.sh
sudo mkdir /home/pi/.firewalla/config/post_main.d
#
# Set Pi-hole as DNS for your network.
# Now proceed to the network settings on Firewalla App, assign 172.16.0.2 as the primary DNS server for the networks that you want to enable Pi-Hole.
#
# Tap on Network Button
# Tap on the Top right edit button
# Tap on the LAN segment you want to change DNS to pi-hole
# Scroll down and change the primary DNS to 172.16.0.2
# Save and you should be able to see DNS requests coming up in the management console.
#

#
# Persisting The Configuration
#
cat <<EOF>> /home/pi/.firewalla/config/post_main.d/start_pi_hole.sh
sudo systemctl start docker
sudo ipset create -! docker_lan_routable_net_set hash:net
sudo ipset add -! docker_lan_routable_net_set 172.16.0.0/24
sudo ipset create -! docker_wan_routable_net_set hash:net
sudo ipset add -! docker_wan_routable_net_set 172.16.0.0/24
sudo systemctl start docker-compose@pi-hole
EOF


# Add "MAXDBDAYS=90" in /data/pi-hole/etc-pihole/pihole-FTL.conf and restart the container.
echo "MAXDBDAYS=90" >> /data/pi-hole/etc-pihole/pihole-FTL.conf
# to put the databas in a new location
DBFILE=/etc/pihole/pihole-FTL.db

sudo systemctl restart docker-compose@pi-hole

#
# To restart the docker service 
# sudo systemctl restart docker-compose@pi-hole
#

#



